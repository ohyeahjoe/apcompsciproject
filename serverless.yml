service: playlist-souffle

provider:
  name: aws
  runtime: python3.6

  # TODO: Move to a fetch-spotify-access-token local role.
  iamRoleStatements:
    - Effect: Allow
      Action:
      - KMS:Decrypt
      Resource: ${self:custom.kmsSecrets.keyArn}

package:
  include:
    - souffle/**

functions:
  fetch-spotify-access-token:
    description: Obtain a spotify access token given a spotify refresh token
    handler: fetch-spotify-access-token/handler.main
    environment:
      SPOTIFY_CLIENT_ID: ${self:custom.spotifyClientId}
      SPOTIFY_CLIENT_SECRET: ${self:custom.kmsSecrets.secrets.SPOTIFY_CLIENT_SECRET}
    events:
      - http:
          path: /accesstoken
          method: post # to match POST https://accounts.spotify.com/api/token
          cors: true

  fetch-spotify-refresh-token:
    description: Obtain a spotify refresh token given a spotify auth token
    handler: fetch-spotify-refresh-token/handler.main
    environment:
      SPOTIFY_CLIENT_ID: ${self:custom.spotifyClientId}
      SPOTIFY_CLIENT_SECRET: ${self:custom.kmsSecrets.secrets.SPOTIFY_CLIENT_SECRET}
    events:
      - http:
          path: /refreshtoken
          method: post # to match POST https://accounts.spotify.com/api/token
          cors: true

  shuffle-playlist:
    description: Shuffle a playlists tracks by artist or album
    handler: shuffle-playlist/handler.main
    events:
      - http:
          path: /souffle
          method: post
          cors: true

plugins:
  - serverless-python-requirements
  - serverless-kms-secrets

custom:
  kmsSecrets: ${file(kms-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml)}
  spotifyClientId: b231329aba1a4c539375436a267db917
